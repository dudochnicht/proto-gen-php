<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: catalog/v1/configuration_template.proto

namespace Catalog\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\GPBUtil;
use Google\Protobuf\RepeatedField;

/**
 * Generated from protobuf message <code>catalog.v1.GetModelConfigurationTemplateResponse</code>
 */
class GetModelConfigurationTemplateResponse extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.catalog.v1.ConfigurationTemplate configuration_template = 1 [json_name = "configurationTemplate"];</code>
     */
    protected $configuration_template = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Catalog\V1\ConfigurationTemplate $configuration_template
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Catalog\V1\ConfigurationTemplate::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.catalog.v1.ConfigurationTemplate configuration_template = 1 [json_name = "configurationTemplate"];</code>
     * @return \Catalog\V1\ConfigurationTemplate|null
     */
    public function getConfigurationTemplate()
    {
        return $this->configuration_template;
    }

    public function hasConfigurationTemplate()
    {
        return isset($this->configuration_template);
    }

    public function clearConfigurationTemplate()
    {
        unset($this->configuration_template);
    }

    /**
     * Generated from protobuf field <code>.catalog.v1.ConfigurationTemplate configuration_template = 1 [json_name = "configurationTemplate"];</code>
     * @param \Catalog\V1\ConfigurationTemplate $var
     * @return $this
     */
    public function setConfigurationTemplate($var)
    {
        GPBUtil::checkMessage($var, \Catalog\V1\ConfigurationTemplate::class);
        $this->configuration_template = $var;

        return $this;
    }

}

