<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: device/v1/device.proto

namespace Device\V1;

use UnexpectedValueException;

/**
 * Protobuf type <code>device.v1.DeviceStatus</code>
 */
class DeviceStatus
{
    /**
     * Generated from protobuf enum <code>DEVICE_STATUS_UNSPECIFIED = 0;</code>
     */
    const DEVICE_STATUS_UNSPECIFIED = 0;
    /**
     * Generated from protobuf enum <code>DEVICE_STATUS_CREATED = 1;</code>
     */
    const DEVICE_STATUS_CREATED = 1;
    /**
     * Generated from protobuf enum <code>DEVICE_STATUS_CONFIGURED = 2;</code>
     */
    const DEVICE_STATUS_CONFIGURED = 2;
    /**
     * Generated from protobuf enum <code>DEVICE_STATUS_IN_REPAIR = 3;</code>
     */
    const DEVICE_STATUS_IN_REPAIR = 3;
    /**
     * Generated from protobuf enum <code>DEVICE_STATUS_FOR_SALE = 4;</code>
     */
    const DEVICE_STATUS_FOR_SALE = 4;
    /**
     * Generated from protobuf enum <code>DEVICE_STATUS_SOLD = 5;</code>
     */
    const DEVICE_STATUS_SOLD = 5;

    private static $valueToName = [
        self::DEVICE_STATUS_UNSPECIFIED => 'DEVICE_STATUS_UNSPECIFIED',
        self::DEVICE_STATUS_CREATED => 'DEVICE_STATUS_CREATED',
        self::DEVICE_STATUS_CONFIGURED => 'DEVICE_STATUS_CONFIGURED',
        self::DEVICE_STATUS_IN_REPAIR => 'DEVICE_STATUS_IN_REPAIR',
        self::DEVICE_STATUS_FOR_SALE => 'DEVICE_STATUS_FOR_SALE',
        self::DEVICE_STATUS_SOLD => 'DEVICE_STATUS_SOLD',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

